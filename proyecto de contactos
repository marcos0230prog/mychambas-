using System;
using System.Collections.Generic;

class Program
{
    static void Main()
    {
        Console.WriteLine("Bienvenido a mi lista de Contactos");

        // Variables para almacenar los contactos
        bool running = true;
        List<int> ids = new List<int>();
        Dictionary<int, string> names = new Dictionary<int, string>();
        Dictionary<int, string> lastnames = new Dictionary<int, string>();
        Dictionary<int, string> addresses = new Dictionary<int, string>();
        Dictionary<int, string> telephones = new Dictionary<int, string>();
        Dictionary<int, string> emails = new Dictionary<int, string>();
        Dictionary<int, int> ages = new Dictionary<int, int>();
        Dictionary<int, bool> bestFriends = new Dictionary<int, bool>();

        while (running)
        {
            Console.WriteLine(@"1. Agregar Contacto     2. Ver Contactos    3. Buscar Contactos     4. Modificar Contacto   5. Eliminar Contacto    6. Salir");
            Console.WriteLine("Digite el número de la opción deseada");

            int typeOption = Convert.ToInt32(Console.ReadLine());

            switch (typeOption)
            {
                case 1:
                    AddContact(ids, names, lastnames, addresses, telephones, emails, ages, bestFriends);
                    break;
                case 2:
                    ViewContacts(ids, names, lastnames, addresses, telephones, emails, ages, bestFriends);
                    break;
                case 3:
                    SearchContact(names, lastnames);
                    break;
                case 4:
                    ModifyContact(names, lastnames, addresses, telephones, emails, ages, bestFriends);
                    break;
                case 5:
                    DeleteContact(ids, names, lastnames, addresses, telephones, emails, ages, bestFriends);
                    break;
                case 6:
                    running = false;
                    break;
                default:
                    Console.WriteLine("Opción no válida. Intente nuevamente.");
                    break;
            }
        }
    }

    static void AddContact(List<int> ids, Dictionary<int, string> names, Dictionary<int, string> lastnames,
                           Dictionary<int, string> addresses, Dictionary<int, string> telephones,
                           Dictionary<int, string> emails, Dictionary<int, int> ages,
                           Dictionary<int, bool> bestFriends)
    {
        Console.WriteLine("Digite el nombre de la persona:");
        string name = Console.ReadLine();
        Console.WriteLine("Digite el apellido:");
        string lastname = Console.ReadLine();
        Console.WriteLine("Digite la dirección:");
        string address = Console.ReadLine();
        Console.WriteLine("Digite el teléfono de la persona:");
        string phone = Console.ReadLine();
        Console.WriteLine("Digite el email de la persona:");
        string email = Console.ReadLine();
        Console.WriteLine("Digite la edad de la persona en números:");
        int age = Convert.ToInt32(Console.ReadLine());
        Console.WriteLine("Especifique si usted lo comsidera su mejor amigo: 1. Si, 2. No:");
        bool isBestFriend = Convert.ToInt32(Console.ReadLine()) == 1;

        var id = ids.Count + 1;
        ids.Add(id);
        names.Add(id, name);
        lastnames.Add(id, lastname);
        addresses.Add(id, address);
        telephones.Add(id, phone);
        emails.Add(id, email);
        ages.Add(id, age);
        bestFriends.Add(id, isBestFriend);

        Console.WriteLine("Contacto agregado con éxito.");
    }

    static void ViewContacts(List<int> ids, Dictionary<int, string> names, Dictionary<int, string> lastnames,
                             Dictionary<int, string> addresses, Dictionary<int, string> telephones,
                             Dictionary<int, string> emails, Dictionary<int, int> ages,
                             Dictionary<int, bool> bestFriends)
    {
        Console.WriteLine($"{"Nombre",-15} {"Apellido",-15} {"Dirección",-25} {"Teléfono",-15} {"Email",-30} {"Edad",-5} {"Es Mejor Amigo?"}");
        Console.WriteLine(new string('-', 100));
        foreach (var id in ids)
        {
            string isBestFriendStr = bestFriends[id] ? "Si" : "No";
            Console.WriteLine($"{names[id],-15} {lastnames[id],-15} {addresses[id],-25} {telephones[id],-15} {emails[id],-30} {ages[id],-5} {isBestFriendStr}");
        }
    }

    static void SearchContact(Dictionary<int, string> names, Dictionary<int, string> lastnames)
    {
        Console.WriteLine("¿Quieres buscar por nombre o apellido? (1. Nombre, 2. Apellido)");
        int choice = Convert.ToInt32(Console.ReadLine());
        Console.WriteLine("Ingrese el término de búsqueda:");
        string searchTerm = Console.ReadLine();

        bool found = false;
        foreach (var id in names.Keys)
        {
            if ((choice == 1 && names[id].Contains(searchTerm, StringComparison.OrdinalIgnoreCase)) ||
                (choice == 2 && lastnames[id].Contains(searchTerm, StringComparison.OrdinalIgnoreCase)))
            {
                Console.WriteLine($"Encontrado: {names[id]} {lastnames[id]}");
                found = true;
            }
        }

        if (!found)
        {
            Console.WriteLine("No se encontraron contactos.");
        }
    }

    static void ModifyContact(Dictionary<int, string> names, Dictionary<int, string> lastnames,
                              Dictionary<int, string> addresses, Dictionary<int, string> telephones,
                              Dictionary<int, string> emails, Dictionary<int, int> ages,
                              Dictionary<int, bool> bestFriends)
    {
        Console.WriteLine("Ingrese el ID del contacto a modificar:");
        int id = Convert.ToInt32(Console.ReadLine());

        if (!names.ContainsKey(id))
        {
            Console.WriteLine("Contacto no encontrado.");
            return;
        }

        Console.WriteLine("Ingrese el nuevo nombre (deje en blanco para no modificar):");
        string name = Console.ReadLine();
        Console.WriteLine("Ingrese el nuevo apellido (deje en blanco para no modificar):");
        string lastname = Console.ReadLine();
        Console.WriteLine("Ingrese la nueva dirección (deje en blanco para no modificar):");
        string address = Console.ReadLine();
        Console.WriteLine("Ingrese el nuevo teléfono (deje en blanco para no modificar):");
        string phone = Console.ReadLine();
        Console.WriteLine("Ingrese el nuevo email (deje en blanco para no modificar):");
        string email = Console.ReadLine();
        Console.WriteLine("Ingrese la nueva edad (deje en blanco para no modificar):");
        string ageInput = Console.ReadLine();
        Console.WriteLine("Especifique si es mejor amigo: 1. Si, 2. No (deje en blanco para no modificar):");
        string bestFriendInput = Console.ReadLine();

        if (!string.IsNullOrWhiteSpace(name)) names[id] = name;
        if (!string.IsNullOrWhiteSpace(lastname)) lastnames[id] = lastname;
        if (!string.IsNullOrWhiteSpace(address)) addresses[id] = address;
        if (!string.IsNullOrWhiteSpace(phone)) telephones[id] = phone;
        if (!string.IsNullOrWhiteSpace(email)) emails[id] = email;

        if (int.TryParse(ageInput, out int age)) ages[id] = age;
        if (bestFriendInput == "1") bestFriends[id] = true;
        else if (bestFriendInput == "2") bestFriends[id] = false;

        Console.WriteLine("Contacto modificado con éxito.");
    }

    static void DeleteContact(List<int> ids, Dictionary<int, string> names, Dictionary<int, string> lastnames,
                              Dictionary<int, string> addresses, Dictionary<int, string> telephones,
                              Dictionary<int, string> emails, Dictionary<int, int> ages,
                              Dictionary<int, bool> bestFriends)
    {
        Console.WriteLine("Ingrese el ID del contacto a eliminar:");
        int id = Convert.ToInt32(Console.ReadLine());

        if (!ids.Contains(id))
        {
            Console.WriteLine("Contacto no encontrado.");
            return;
        }

        ids.Remove(id);
        names.Remove(id);
        lastnames.Remove(id);
        addresses.Remove(id);
        telephones.Remove(id);
        emails.Remove(id);
        ages.Remove(id);
        bestFriends.Remove(id);

        Console.WriteLine("Contacto eliminado con éxito.");
    }
}
